Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

buffer_adr          0x1               main.o
var1                0x2               main.o
buffer              0x2               main.o
txbuffer            0x14              main.o
var2                0x2               main.o
rxbuffer            0x14              main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
LOAD main.o
LOAD twislave.o
LOAD /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x1b6
 *(.vectors)
 .vectors       0x00000000       0x68 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x16 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
                0x00000074                __do_copy_data
 .init4         0x0000008a       0x10 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                0x0000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009a        0x8 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x000000a2        0x4 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
                0x000000a2                __vector_22
                0x000000a2                __vector_1
                0x000000a2                __vector_12
                0x000000a2                __bad_interrupt
                0x000000a2                __vector_6
                0x000000a2                __vector_3
                0x000000a2                __vector_23
                0x000000a2                __vector_25
                0x000000a2                __vector_11
                0x000000a2                __vector_13
                0x000000a2                __vector_17
                0x000000a2                __vector_19
                0x000000a2                __vector_7
                0x000000a2                __vector_5
                0x000000a2                __vector_4
                0x000000a2                __vector_9
                0x000000a2                __vector_2
                0x000000a2                __vector_21
                0x000000a2                __vector_15
                0x000000a2                __vector_8
                0x000000a2                __vector_14
                0x000000a2                __vector_10
                0x000000a2                __vector_16
                0x000000a2                __vector_18
                0x000000a2                __vector_20
 .text          0x000000a6        0xc main.o
                0x000000a6                init
 .text          0x000000b2       0xde twislave.o
                0x000000b2                init_twi_slave
                0x000000d0                __vector_24
 .text          0x00000190        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 .text          0x00000190        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
 .text          0x00000190        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                0x00000190                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000190       0x22 main.o
                0x00000190                main
 .text.libgcc   0x000001b2        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000001b2        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000001b2        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                0x000001b2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000001b2        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
                0x000001b2                exit
                0x000001b2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000001b2        0x4 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000001b6                _etext = .

.data           0x00800100        0x0 load address 0x000001b6
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
 .data          0x00800100        0x0 main.o
 .data          0x00800100        0x0 twislave.o
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x2f
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
 .bss           0x00800100        0x0 main.o
 .bss           0x00800100        0x0 twislave.o
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800100       0x2f main.o
                0x00800100                buffer_adr
                0x00800101                var1
                0x00800103                buffer
                0x00800105                txbuffer
                0x00800119                var2
                0x0080011b                rxbuffer
                0x0080012f                PROVIDE (__bss_end, .)
                0x000001b6                __data_load_start = LOADADDR (.data)
                0x000001b6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080012f        0x0
                0x0080012f                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080012f                PROVIDE (__noinit_end, .)
                0x0080012f                _end = .
                0x0080012f                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000      0x834
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
 .stab          0x000006cc       0x54 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
                                 0x60 (size before relaxing)
 .stab          0x00000720       0x9c /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
                                 0xa8 (size before relaxing)
 .stab          0x000007bc       0x78 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                                 0x84 (size before relaxing)

.stabstr        0x00000000       0x9c
 *(.stabstr)
 .stabstr       0x00000000       0x9c /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo .zdebug_srcinfo)

.debug_sfnames
 *(.debug_sfnames .zdebug_sfnames)

.debug_aranges  0x00000000       0x48
 *(.debug_aranges .zdebug_aranges)
 .debug_aranges
                0x00000000       0x28 main.o
 .debug_aranges
                0x00000028       0x20 twislave.o

.debug_pubnames
 *(.debug_pubnames .zdebug_pubnames)

.debug_info     0x00000000      0x2bc
 *(.debug_info .gnu.linkonce.wi.* .zdebug_info)
 .debug_info    0x00000000      0x17b main.o
 .debug_info    0x0000017b      0x141 twislave.o

.debug_abbrev   0x00000000      0x15a
 *(.debug_abbrev .zdebug_abbrev)
 .debug_abbrev  0x00000000       0x9c main.o
 .debug_abbrev  0x0000009c       0xbe twislave.o

.debug_line     0x00000000      0x143
 *(.debug_line .zdebug_line)
 .debug_line    0x00000000       0xa2 main.o
 .debug_line    0x000000a2       0xa1 twislave.o

.debug_frame    0x00000000       0x88
 *(.debug_frame .zdebug_frame)
 .debug_frame   0x00000000       0x34 main.o
 .debug_frame   0x00000034       0x54 twislave.o

.debug_str      0x00000000       0xf2
 *(.debug_str .zdebug_str)
 .debug_str     0x00000000       0xc7 main.o
                                0x102 (size before relaxing)
 .debug_str     0x000000c7       0x2b twislave.o
                                 0xf6 (size before relaxing)

.debug_loc      0x00000000       0xad
 *(.debug_loc .zdebug_loc)
 .debug_loc     0x00000000       0xad twislave.o

.debug_macinfo
 *(.debug_macinfo .zdebug_macinfo)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 main.o

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__bss_end                                         /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                                                  twislave.o
                                                  main.o
__do_copy_data                                    /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
                                                  twislave.o
                                                  main.o
__heap_end                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__init                                            /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__stack                                           /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_1                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_10                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_11                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_12                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_13                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_14                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_15                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_16                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_17                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_18                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_19                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_2                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_20                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_21                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_22                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_23                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_24                                       twislave.o
                                                  /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_25                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_3                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_4                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_5                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_6                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_7                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_8                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_9                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vector_default                                  /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
__vectors                                         /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
_exit                                             /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
buffer                                            main.o
buffer_adr                                        twislave.o
                                                  main.o
exit                                              /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
init                                              main.o
init_twi_slave                                    twislave.o
                                                  main.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm168.o
rxbuffer                                          twislave.o
                                                  main.o
txbuffer                                          twislave.o
                                                  main.o
var1                                              main.o
var2                                              main.o
